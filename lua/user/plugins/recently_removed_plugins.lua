-- vim: ft=lua:foldmarker=(((,))):foldmethod=marker:foldlevel=0:shiftwidth=2:softtabstop=2:tabstop=2

-- vimscript plugins (((

-- ["AndrewRadev/bufferize.vim"] = require "user.plugins.bufferize_vim", -- Execute a :command and show the output in a temporary buffer
-- ["ilyachur/cmake4vim"] = require "user.plugins.cmake_for_vim", -- Vim plugin for CMake projects
-- ["ekalinin/Dockerfile.vim"] = require "user.plugins.dockerfile_vim", -- Vim syntax file & snippets for Docker's Dockerfile
-- ["mg979/tasks.vim"] = require "user.plugins.tasks_mg979", -- Async jobs and tasks
-- ["m-pilia/vim-ccls"] = require "user.plugins.vim-ccls", -- Vim plugin for the ccls language server
-- ["bfrg/vim-cmakecache-syntax"] = require "user.plugins.cmakecache_syntax", -- Vim syntax file for CMakeCache.txt files generated by CMake
-- ["dbmrq/vim-dialect"] = require "user.plugins.vim_dialect", -- Project specific spellfiles
-- ["urbainvaes/vim-ripple"] = require "user.plugins.vim_ripple", -- Minimalist plugin to interact with a REPL
-- ["tpope/vim-unimpaired"] = require "user.plugins.vim_unimpaired", -- Pairs of handy bracket mappings
-- ["svban/YankAssassin.vim"] = require "user.plugins.yank_assassin", -- Don't let the cursor move while Yanking in Vim/Neovim

-- )))

-- lua plugins (((

-- ["numtostr/BufOnly.nvim"] = require "user.plugins.bufonly", -- Lua/Neovim port of BufOnly.vim with some changes
-- ["p00f/clangd_extensions.nvim"] = require "user.plugins.clangd_extensions_nvim", -- Clangd's off-spec features
-- ["Civitasv/cmake-tools.nvim"] = require "user.plugins.cmake_tools", -- CMake integration in Neovim
-- ["hrsh7th/cmp-calc"] = require "user.plugins.cmp_calc", -- nvim-cmp source for math calculation
-- ["hrsh7th/cmp-omni"] = require "user.plugins.cmp_omni", -- nvim-cmp source for omnifunc
-- ["gpanders/editorconfig.nvim"] = {}, -- EditorConfig plugin for Neovim
-- ["akinsho/git-conflict.nvim"] = require "user.plugins.git_conflict", -- Visualise & resolve merge conflicts
-- ["ellisonleao/glow.nvim"] = { cmd = { "Glow", "GlowInstall" } }, -- A markdown preview directly in your neovim
-- ["lukas-reineke/headlines.nvim"] = require "user.plugins.headlines", -- Horizontal highlights for text filetypes
-- ["hkupty/iron.nvim"] = require "user.plugins.iron", -- Interactive Repl Over Neovim
-- ["https://git.sr.ht/~whynothugo/lsp_lines.nvim"] = require "user.plugins.lsplines_nvim", -- renders diagnostics using virtual lines on top of the real line of code
-- ["chentoast/marks.nvim"] = require "user.plugins.marks", -- A better UX for viewing & interacting with Vim marks
-- ["jghauser/mkdir.nvim"] = { event = "BufWritePre" }, -- This neovim plugin creates missing folders on save
-- ["jbyuki/nabla.nvim"] = require "user.plugins.nabla_nvim", -- Take your scientific notes in Neovim
-- ["nvim-neotest/neotest"] = require "user.plugins.nvim_neotest", -- An extensible framework for interacting with tests within NeoVim.
-- ["nvim-neotest/neotest-python"] = { ft = "python" }, -- Neotest adapter for python. Supports Pytest and unittest test files.
-- ["catppuccin/nvim"] = require "user.plugins.catppuccin_nvim", -- Soothing pastel theme for Neovim
-- ["Canop/nvim-bacon"] = { ft = "rust" }, -- bacon's companion for neovim
-- ["andythigpen/nvim-coverage"] = require "user.plugins.nvim-coverage", -- Displays test coverage data in the sign column
-- ["mfussenegger/nvim-dap"] = require "user.plugins.nvim_dap", -- Debug Adapter Protocol client implementation
-- ["rcarriga/nvim-dap-ui"] = require "user.plugins.nvim_dapui", -- A UI for nvim-dap
-- ["theHamsta/nvim-dap-virtual-text"] = require "user.plugins.nvim_dap_virtual_text", -- slow!
-- ["https://gitlab.com/yorickpeterse/nvim-dd"] = require "user.plugins.nvim_dd", -- Deferring of NeoVim diagnostics
-- ["kevinhwang91/nvim-hlslens"] = require "user.plugins.nvim_hlslens", -- A hlsearch Lens for Neovim
-- ["mfussenegger/nvim-lint"] = { module = "lint" }, -- An asynchronous linter plugin. Loads through local .vimrc.lua
-- ["sitiom/nvim-numbertoggle"] = require "user.plugins.nvim_numbertoggle", -- Auto-toggle b/w rel & abs line nos
-- ["romgrk/nvim-treesitter-context"] = require "user.plugins.nvim-treesitter-context", -- Show code context
-- { "eddiebergman/nvim-treesitter-pyfold", after = { "nvim-treesitter" }, ft = "python" }, -- Sane Python folding
-- ["nvim-treesitter/nvim-treesitter-refactor"] = { after = "nvim-treesitter" }, -- Treesitter refactor module
-- ["nvim-treesitter/nvim-treesitter-textobjects"] = { after = "nvim-treesitter" },
-- ["RRethy/nvim-treesitter-textsubjects"] = require "user.plugins.nvim-treesitter-textsubjects", -- DWIM textobjects
-- ["s1n7ax/nvim-window-picker"] = {}, -- Prompts to pick a window & returns its window id
-- ["samjwill/nvim-unception"] = {}, -- Open files from within Neovim's terminal emulator without weird behavior
-- ["jbyuki/one-small-step-for-vimkind"] = {}, -- Debug adapter for Neovim plugins
-- ["Weissle/persistent-breakpoints.nvim"] = require "user.plugins.persistent-breakpoints",
-- ["ahmedkhalf/project.nvim"] = require "user.plugins.project", -- The superior project management solution for nvim
-- ["HallerPatrick/py_lsp.nvim"] = require "user.plugins.pylsp_nvim", -- Lsp Plugin for working with Python virtual environments
-- ["michaelb/sniprun"] = require "user.plugins.sniprun", -- Run lines/blocks of code, supports multiples languages
-- ["luukvbaal/stabilize.nvim"] = require "user.plugins.stabilize", -- Stabilize window open/close events
-- ["lambdalisue/suda.vim"] = require "user.plugins.suda_vim", -- An alternative sudo.vim for Vim and Neovim
-- ["abecodes/tabout.nvim"] = require "user.plugins.tabout", -- tabout plugin for neovim
-- ["SantinoKeupp/telescope-cmake4vim.nvim"] = require "user.plugins.telescope_cmakeforvim",
-- ["nvim-telescope/telescope-symbols.nvim"] = require "user.plugins.telescope_symbols",
-- ["folke/trouble.nvim"] = require "user.plugins.trouble_nvim", -- Helps you solve all the trouble your code is causing

-- )))
