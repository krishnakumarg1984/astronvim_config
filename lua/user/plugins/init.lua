-- vim: ft=lua:foldmarker=(((,))):foldmethod=marker:foldlevel=0:shiftwidth=2:softtabstop=2:tabstop=2

return {
  -- Modify/Disable a few AstroNvim default plugins (((

  ["goolord/alpha-nvim"] = { disable = true }, -- A lua powered greeter like vim-startify / dashboard-nvim
  ["max397574/better-escape.nvim"] = { disable = true }, -- Escape from insert mode without delay when typing
  -- ["jayp0521/mason-null-ls.nvim"] = { disable = true },
  ["rcarriga/nvim-notify"] = { disable = true }, -- A fancy, configurable, notification manager for NeoVim
  ["windwp/nvim-ts-autotag"] = require "user.plugins.nvim-ts-autotag", -- Autoclose & rename html tags with treesitter
  ["p00f/nvim-ts-rainbow"] = { disable = true }, -- Rainbow parentheses for neovim using tree-sitter

  -- )))

  -- Install additional plugins (((

  -- Additional vimscript plugins (((

  -- ["tweekmonster/startuptime.vim"] = require "user.plugins.startuptime_vim", -- Breakdown Vim's '--startuptime' output

  ["AndrewRadev/bufferize.vim"] = require "user.plugins.bufferize_vim", -- Execute a :command and show the output in a temporary buffer
  ["ilyachur/cmake4vim"] = require "user.plugins.cmake_for_vim", -- Vim plugin for CMake projects
  ["rust-lang/rust.vim"] = require "user.plugins.rust_vim", -- Vim configuration for Rust. (must be loaded before 'rust-tools')
  ["lambdalisue/suda.vim"] = require "user.plugins.suda_vim", -- An alternative sudo.vim for Vim and Neovim
  -- ["mg979/tasks.vim"] = require "user.plugins.tasks_mg979", -- Async jobs and tasks
  -- ["m-pilia/vim-ccls"] = require "user.plugins.vim-ccls", -- Vim plugin for the ccls language server
  -- ["bfrg/vim-cmakecache-syntax"] = require "user.plugins.cmakecache_syntax", -- Vim syntax file for CMakeCache.txt files generated by CMake
  -- ["dbmrq/vim-dialect"] = require "user.plugins.vim_dialect", -- Project specific spellfiles
  ["andymass/vim-matchup"] = require "user.plugins.vim_matchup", -- Even better '%' navigate & highlight matching words
  ["romainl/vim-qf"] = require "user.plugins.vim_qf", -- Tame the quickfix window.
  -- ["urbainvaes/vim-ripple"] = require "user.plugins.vim_ripple", -- Minimalist plugin to interact with a REPL
  ["Konfekt/vim-sentence-chopper"] = require "user.plugins.vim_sentence_chopper", -- VCS-friendly text formatting
  -- ["tpope/vim-unimpaired"] = require "user.plugins.vim_unimpaired", -- Pairs of handy bracket mappings
  ["lervag/vimtex"] = require "user.plugins.vimtex", -- VimTeX: A modern Vim and neovim filetype plugin for LaTeX files
  ["svban/YankAssassin.vim"] = require "user.plugins.yank_assassin", -- Don't let the cursor move while Yanking in Vim/Neovim

  -- ))) end of additional vimscript plugins

  -- Additional lua plugins (((

  ["numtostr/BufOnly.nvim"] = require "user.plugins.bufonly", -- Lua/Neovim port of BufOnly.vim with some changes
  -- ["p00f/clangd_extensions.nvim"] = require "user.plugins.clangd_extensions_nvim", -- Clangd's off-spec features
  -- ["Civitasv/cmake-tools.nvim"] = require "user.plugins.cmake_tools", -- CMake integration in Neovim
  ["saecki/crates.nvim"] = require "user.plugins.crates_nvim", -- A neovim plugin that helps managing crates.io dependencies
  ["hrsh7th/cmp-buffer"] = require "user.plugins.cmp_buffer", -- nvim-cmp source for buffer words
  ["hrsh7th/cmp-calc"] = require "user.plugins.cmp_calc", -- nvim-cmp source for math calculation
  ["hrsh7th/cmp-emoji"] = require "user.plugins.cmp_emoji", -- nvim-cmp source for emoji
  ["petertriho/cmp-git"] = require "user.plugins.cmp_git_nvim", -- Git source for nvim-cmp
  -- ["hrsh7th/cmp-omni"] = require "user.plugins.cmp_omni", -- nvim-cmp source for omnifunc
  ["gpanders/editorconfig.nvim"] = {}, -- EditorConfig plugin for Neovim
  ["MunifTanjim/exrc.nvim"] = require "user.plugins.exrc_nvim", -- Secure Project Local Config for Neovim
  -- ["akinsho/git-conflict.nvim"] = require "user.plugins.git_conflict", -- Visualise & resolve merge conflicts
  ["ellisonleao/glow.nvim"] = { cmd = { "Glow", "GlowInstall" } }, -- A markdown preview directly in your neovim
  -- ["lukas-reineke/headlines.nvim"] = require "user.plugins.headlines", -- Horizontal highlights for text filetypes
  -- ["hkupty/iron.nvim"] = require "user.plugins.iron", -- Interactive Repl Over Neovim
  ["rebelot/kanagawa.nvim"] = {}, -- require "user.plugins.kanagawa", -- Colorscheme inspired by the colors of the famous painting by Katsushika Hokusai
  ["lvimuser/lsp-inlayhints.nvim"] = require "user.plugins.lsp_inlayhints",
  ["https://git.sr.ht/~whynothugo/lsp_lines.nvim"] = require "user.plugins.lsplines_nvim", -- renders diagnostics using virtual lines on top of the real line of code
  ["ray-x/lsp_signature.nvim"] = require "user.plugins.lsp_signature_nvim", -- LSP signature hint as you type
  -- ["chentoast/marks.nvim"] = require "user.plugins.marks", -- A better UX for viewing & interacting with Vim marks
  ["echasnovski/mini.nvim"] = require "user.plugins.mini", -- Collection of minimal, independent, & fast Lua modules
  ["jghauser/mkdir.nvim"] = { event = "BufWritePre" }, -- This neovim plugin creates missing folders on save
  ["jbyuki/nabla.nvim"] = require "user.plugins.nabla_nvim", -- Take your scientific notes in Neovim
  ["danymat/neogen"] = require "user.plugins.neogen_nvim", -- Annotation generator (multiple languages & conventions)
  ["TimUntersberger/neogit"] = require "user.plugins.neogit_nvim", -- Magit for neovim
  -- ["nvim-neotest/neotest"] = require "user.plugins.nvim_neotest", -- An extensible framework for interacting with tests within NeoVim.
  -- ["nvim-neotest/neotest-python"] = { ft = "python" }, -- Neotest adapter for python. Supports Pytest and unittest test files.
  -- ["catppuccin/nvim"] = require "user.plugins.catppuccin_nvim", -- Soothing pastel theme for Neovim
  ["weilbith/nvim-code-action-menu"] = require "user.plugins.nvim_code_action_menu", -- Code action pop-up menu (meta-info & diff)
  -- ["Canop/nvim-bacon"] = { ft = "rust" }, -- bacon's companion for neovim
  -- ["andythigpen/nvim-coverage"] = require "user.plugins.nvim-coverage", -- Displays test coverage data in the sign column
  -- ["mfussenegger/nvim-dap"] = require "user.plugins.nvim_dap", -- Debug Adapter Protocol client implementation
  -- ["rcarriga/nvim-dap-ui"] = require "user.plugins.nvim_dapui", -- A UI for nvim-dap
  -- ["theHamsta/nvim-dap-virtual-text"] = require "user.plugins.nvim_dap_virtual_text", -- slow!
  ["https://gitlab.com/yorickpeterse/nvim-dd"] = require "user.plugins.nvim_dd", -- Deferring of NeoVim diagnostics
  ["kevinhwang91/nvim-hlslens"] = require "user.plugins.nvim_hlslens", -- A hlsearch Lens for Neovim
  ["ethanholz/nvim-lastplace"] = require "user.plugins.nvim_lastplace", -- A Lua rewrite of vim-lastplace
  ["kosayoda/nvim-lightbulb"] = require "user.plugins.nvim_lightbulb", -- VSCode bulb for neovim's built-in LSP.
  ["mfussenegger/nvim-lint"] = { module = "lint" }, -- An asynchronous linter plugin. Loads through local .vimrc.lua
  -- ["sitiom/nvim-numbertoggle"] = require "user.plugins.nvim_numbertoggle", -- Auto-toggle b/w rel & abs line nos
  ["https://gitlab.com/yorickpeterse/nvim-pqf"] = require "user.plugins.nvim_pqf", -- Prettier quickfix/location list
  -- ["romgrk/nvim-treesitter-context"] = require "user.plugins.nvim-treesitter-context", -- Show code context
  -- { "eddiebergman/nvim-treesitter-pyfold", after = { "nvim-treesitter" }, ft = "python" }, -- Sane Python folding
  -- ["nvim-treesitter/nvim-treesitter-refactor"] = { after = "nvim-treesitter" }, -- Treesitter refactor module
  -- ["nvim-treesitter/nvim-treesitter-textobjects"] = { after = "nvim-treesitter" },
  -- ["RRethy/nvim-treesitter-textsubjects"] = require "user.plugins.nvim-treesitter-textsubjects", -- DWIM textobjects
  -- ["s1n7ax/nvim-window-picker"] = {}, -- Prompts to pick a window & returns its window id
  ["samjwill/nvim-unception"] = {}, -- Open files from within Neovim's terminal emulator without weird behavior
  -- ["jbyuki/one-small-step-for-vimkind"] = {}, -- Debug adapter for Neovim plugins
  -- ["stevearc/overseer.nvim"] = require "user.plugins.overseer", -- A task runner and job management plugin for Neovim
  -- ["Weissle/persistent-breakpoints.nvim"] = require "user.plugins.persistent-breakpoints",
  ["ahmedkhalf/project.nvim"] = require "user.plugins.project", -- The superior project management solution for nvim
  -- ["HallerPatrick/py_lsp.nvim"] = require "user.plugins.pylsp_nvim", -- Lsp Plugin for working with Python virtual environments
  ["linty-org/readline.nvim"] = require "user.plugins.readline_nvim", -- Readline motions and deletions in Neovim
  ["simrat39/rust-tools.nvim"] = require "user.plugins.rust_tools", -- Tools for better development in rust using neovim's builtin lsp
  -- ["michaelb/sniprun"] = require "user.plugins.sniprun", -- Run lines/blocks of code, supports multiples languages
  -- ["luukvbaal/stabilize.nvim"] = require "user.plugins.stabilize", -- Stabilize window open/close events
  -- ["abecodes/tabout.nvim"] = require "user.plugins.tabout", -- tabout plugin for neovim
  ["SantinoKeupp/telescope-cmake4vim.nvim"] = require "user.plugins.telescope_cmakeforvim",
  ["nvim-telescope/telescope-symbols.nvim"] = require "user.plugins.telescope_symbols",
  ["johmsalas/text-case.nvim"] = require "user.plugins.text_case", -- An all in one plugin for converting text case
  -- ["folke/trouble.nvim"] = require "user.plugins.trouble_nvim", -- Helps you solve all the trouble your code is causing

  -- ))) -- end of additional lua plugins

  -- ))) -- ends "Install additional plugins"
}
